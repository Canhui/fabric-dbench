[2019-09-24 16:23:57,302] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-09-24 16:36:33,324] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-09-24 16:38:58,249] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 16:38:58,291] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2019-09-24 16:38:58,292] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2019-09-24 16:38:58,295] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-09-24 16:38:58,300] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-09-24 16:38:58,303] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2019-09-24 16:38:58,345] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 4294967320) (kafka.controller.KafkaController)
[2019-09-24 16:38:58,350] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2019-09-24 16:38:58,356] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2019-09-24 16:38:58,366] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 16:38:58,368] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-09-24 16:38:58,369] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2019-09-24 16:38:58,369] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-09-24 16:38:58,370] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-09-24 16:38:58,370] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-09-24 16:38:58,374] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,374] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,375] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-09-24 16:38:58,375] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2019-09-24 16:38:58,376] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2019-09-24 16:38:58,389] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 16:38:58,390] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 16:38:58,395] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 16:38:58,395] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 16:38:58,395] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 16:38:58,396] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 16:38:58,397] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 16:38:58,401] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 16:38:58,401] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-09-24 16:38:58,403] INFO [Controller id=1] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-09-24 16:38:58,404] INFO [Controller id=1] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-09-24 16:38:58,408] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,408] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,409] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,409] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,410] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-09-24 16:38:58,431] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-09-24 16:39:03,433] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 16:39:03,434] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 16:39:03,436] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-09-24 16:39:10,234] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2019-09-24 16:39:10,234] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2019-09-24 16:39:10,240] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 16:39:10,243] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2019-09-24 16:39:10,246] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 16:39:10,250] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2019-09-24 16:39:10,252] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339) (kafka.controller.KafkaController)
[2019-09-24 16:39:19,472] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2019-09-24 16:39:19,472] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2019-09-24 16:39:19,478] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 16:39:19,478] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2019-09-24 16:39:19,481] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2019-09-24 16:39:19,482] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 16:39:19,483] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339, 3 -> 4294967355) (kafka.controller.KafkaController)
[2019-09-24 16:39:30,095] INFO [Controller id=1] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 1,2,3,4 (kafka.controller.KafkaController)
[2019-09-24 16:39:30,095] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2019-09-24 16:39:30,103] INFO [Controller id=1] New broker startup callback for 4 (kafka.controller.KafkaController)
[2019-09-24 16:39:30,103] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 16:39:30,105] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(4) (kafka.controller.KafkaController)
[2019-09-24 16:39:30,106] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker4:9092 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 16:39:30,107] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339, 3 -> 4294967355, 4 -> 4294967371) (kafka.controller.KafkaController)
[2019-09-24 16:41:03,872] INFO [Controller id=1] New topics: [Set(topic)], deleted topics: [Set()], new partition replica assignment [Map(topic-0 -> Vector(3))] (kafka.controller.KafkaController)
[2019-09-24 16:41:03,872] INFO [Controller id=1] New partition creation callback for topic-0 (kafka.controller.KafkaController)
[2019-09-24 16:42:32,948] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> Vector(3, 4, 1), __consumer_offsets-30 -> Vector(3, 2, 4), __consumer_offsets-8 -> Vector(1, 2, 3), __consumer_offsets-21 -> Vector(2, 3, 4), __consumer_offsets-4 -> Vector(1, 4, 2), __consumer_offsets-27 -> Vector(4, 2, 3), __consumer_offsets-7 -> Vector(4, 3, 1), __consumer_offsets-9 -> Vector(2, 3, 4), __consumer_offsets-46 -> Vector(3, 4, 1), __consumer_offsets-25 -> Vector(2, 4, 1), __consumer_offsets-35 -> Vector(4, 1, 2), __consumer_offsets-41 -> Vector(2, 1, 3), __consumer_offsets-33 -> Vector(2, 3, 4), __consumer_offsets-23 -> Vector(4, 1, 2), __consumer_offsets-49 -> Vector(2, 4, 1), __consumer_offsets-47 -> Vector(4, 1, 2), __consumer_offsets-16 -> Vector(1, 4, 2), __consumer_offsets-28 -> Vector(1, 4, 2), __consumer_offsets-31 -> Vector(4, 3, 1), __consumer_offsets-36 -> Vector(1, 3, 4), __consumer_offsets-42 -> Vector(3, 2, 4), __consumer_offsets-3 -> Vector(4, 2, 3), __consumer_offsets-18 -> Vector(3, 2, 4), __consumer_offsets-37 -> Vector(2, 4, 1), __consumer_offsets-15 -> Vector(4, 2, 3), __consumer_offsets-24 -> Vector(1, 3, 4), __consumer_offsets-38 -> Vector(3, 1, 2), __consumer_offsets-17 -> Vector(2, 1, 3), __consumer_offsets-48 -> Vector(1, 3, 4), __consumer_offsets-19 -> Vector(4, 3, 1), __consumer_offsets-11 -> Vector(4, 1, 2), __consumer_offsets-13 -> Vector(2, 4, 1), __consumer_offsets-2 -> Vector(3, 1, 2), __consumer_offsets-43 -> Vector(4, 3, 1), __consumer_offsets-6 -> Vector(3, 2, 4), __consumer_offsets-14 -> Vector(3, 1, 2), __consumer_offsets-20 -> Vector(1, 2, 3), __consumer_offsets-0 -> Vector(1, 3, 4), __consumer_offsets-44 -> Vector(1, 2, 3), __consumer_offsets-39 -> Vector(4, 2, 3), __consumer_offsets-12 -> Vector(1, 3, 4), __consumer_offsets-45 -> Vector(2, 3, 4), __consumer_offsets-1 -> Vector(2, 4, 1), __consumer_offsets-5 -> Vector(2, 1, 3), __consumer_offsets-26 -> Vector(3, 1, 2), __consumer_offsets-29 -> Vector(2, 1, 3), __consumer_offsets-34 -> Vector(3, 4, 1), __consumer_offsets-10 -> Vector(3, 4, 1), __consumer_offsets-32 -> Vector(1, 2, 3), __consumer_offsets-40 -> Vector(1, 4, 2))] (kafka.controller.KafkaController)
[2019-09-24 16:42:32,948] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2019-09-24 16:43:57,303] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2019-09-24 16:43:57,304] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2019-09-24 16:43:57,305] DEBUG [Controller id=1] Live brokers: 2,3,4 (kafka.controller.KafkaController)
[2019-09-24 16:43:57,426] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=22,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=7,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=46,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=25,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=35,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=41,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=23,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=49,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=47,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=31,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=37,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=38,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=17,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=19,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=11,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=13,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=43,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=14,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=5,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=26,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=29,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=34,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=10,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-09-24 16:43:57,662] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=23,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=14,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=22,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=10,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=7,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=29,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=26,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=46,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=31,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=49,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=38,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=34,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=11,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=13,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=17,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=25,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=43,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=19,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=35,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=37,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=5,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=47,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=41,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-09-24 16:43:57,664] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:2,ISR:2,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:4,ISR:4,2,3,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:4,ISR:4,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:2,ISR:2,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:4,ISR:4,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:2,ISR:2,3,4,LeaderEpoch:0,ControllerEpoch:1),topic-0 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:2,ISR:2,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:3,ISR:3,2,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:4,ISR:4,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:2,ISR:2,3,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:4,ISR:4,2,3,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:3,ISR:3,2,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:4,ISR:4,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:2,ISR:2,3,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:2,ISR:2,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:3,ISR:3,2,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:4,ISR:4,2,3,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:4,ISR:4,2,3,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:2,ISR:2,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:3,ISR:3,2,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:2,ISR:2,3,4,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:4,ISR:4,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:3,ISR:3,4,LeaderEpoch:1,ControllerEpoch:1) (kafka.controller.KafkaController)
[2019-09-24 16:43:58,824] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 16:43:58,826] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 16:43:58,826] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 16:43:58,826] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2019-09-24 16:43:58,827] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 4, 1, 3) (kafka.controller.KafkaController)
[2019-09-24 16:43:58,828] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 16:43:58,829] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 16:43:58,830] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,830] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,830] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,832] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,832] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,832] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,833] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,833] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,833] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,835] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,835] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,835] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 16:43:58,837] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
