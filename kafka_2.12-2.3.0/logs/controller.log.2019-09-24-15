[2019-09-24 15:09:18,697] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-09-24 15:11:48,014] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 15:11:48,059] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2019-09-24 15:11:48,060] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2019-09-24 15:11:48,064] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-09-24 15:11:48,068] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-09-24 15:11:48,070] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2019-09-24 15:11:48,107] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 4294967320) (kafka.controller.KafkaController)
[2019-09-24 15:11:48,112] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2019-09-24 15:11:48,118] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2019-09-24 15:11:48,125] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 15:11:48,127] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-09-24 15:11:48,127] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2019-09-24 15:11:48,128] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-09-24 15:11:48,128] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-09-24 15:11:48,128] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-09-24 15:11:48,132] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,132] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,133] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-09-24 15:11:48,133] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2019-09-24 15:11:48,133] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2019-09-24 15:11:48,141] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 15:11:48,142] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 15:11:48,147] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 15:11:48,148] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 15:11:48,148] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 15:11:48,149] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 15:11:48,150] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 15:11:48,153] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 15:11:48,153] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-09-24 15:11:48,155] INFO [Controller id=1] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-09-24 15:11:48,156] INFO [Controller id=1] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-09-24 15:11:48,159] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,160] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,161] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,161] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,162] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-09-24 15:11:48,181] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-09-24 15:11:53,183] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 15:11:53,184] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 15:11:53,187] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-09-24 15:12:45,501] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2019-09-24 15:12:45,502] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2019-09-24 15:12:45,508] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 15:12:45,511] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2019-09-24 15:12:45,514] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 15:12:45,518] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2019-09-24 15:12:45,520] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339) (kafka.controller.KafkaController)
[2019-09-24 15:13:41,954] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2019-09-24 15:13:41,954] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2019-09-24 15:13:41,961] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-24 15:13:41,961] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2019-09-24 15:13:41,963] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2019-09-24 15:13:41,964] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 15:13:41,965] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339, 3 -> 4294967355) (kafka.controller.KafkaController)
[2019-09-24 15:15:22,617] INFO [Controller id=1] New topics: [Set(topic)], deleted topics: [Set()], new partition replica assignment [Map(topic-0 -> Vector(2))] (kafka.controller.KafkaController)
[2019-09-24 15:15:22,617] INFO [Controller id=1] New partition creation callback for topic-0 (kafka.controller.KafkaController)
[2019-09-24 15:16:53,189] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 15:16:53,189] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 15:16:53,190] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(topic-0 -> Vector(2))) (kafka.controller.KafkaController)
[2019-09-24 15:16:53,192] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-24 15:16:53,194] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:17:12,190] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> Vector(2, 1, 3), __consumer_offsets-30 -> Vector(1, 2, 3), __consumer_offsets-8 -> Vector(3, 1, 2), __consumer_offsets-21 -> Vector(1, 3, 2), __consumer_offsets-4 -> Vector(2, 1, 3), __consumer_offsets-27 -> Vector(1, 3, 2), __consumer_offsets-7 -> Vector(2, 3, 1), __consumer_offsets-9 -> Vector(1, 3, 2), __consumer_offsets-46 -> Vector(2, 1, 3), __consumer_offsets-25 -> Vector(2, 3, 1), __consumer_offsets-35 -> Vector(3, 2, 1), __consumer_offsets-41 -> Vector(3, 2, 1), __consumer_offsets-33 -> Vector(1, 3, 2), __consumer_offsets-23 -> Vector(3, 2, 1), __consumer_offsets-49 -> Vector(2, 3, 1), __consumer_offsets-47 -> Vector(3, 2, 1), __consumer_offsets-16 -> Vector(2, 1, 3), __consumer_offsets-28 -> Vector(2, 1, 3), __consumer_offsets-31 -> Vector(2, 3, 1), __consumer_offsets-36 -> Vector(1, 2, 3), __consumer_offsets-42 -> Vector(1, 2, 3), __consumer_offsets-3 -> Vector(1, 3, 2), __consumer_offsets-18 -> Vector(1, 2, 3), __consumer_offsets-37 -> Vector(2, 3, 1), __consumer_offsets-15 -> Vector(1, 3, 2), __consumer_offsets-24 -> Vector(1, 2, 3), __consumer_offsets-38 -> Vector(3, 1, 2), __consumer_offsets-17 -> Vector(3, 2, 1), __consumer_offsets-48 -> Vector(1, 2, 3), __consumer_offsets-19 -> Vector(2, 3, 1), __consumer_offsets-11 -> Vector(3, 2, 1), __consumer_offsets-13 -> Vector(2, 3, 1), __consumer_offsets-2 -> Vector(3, 1, 2), __consumer_offsets-43 -> Vector(2, 3, 1), __consumer_offsets-6 -> Vector(1, 2, 3), __consumer_offsets-14 -> Vector(3, 1, 2), __consumer_offsets-20 -> Vector(3, 1, 2), __consumer_offsets-0 -> Vector(1, 2, 3), __consumer_offsets-44 -> Vector(3, 1, 2), __consumer_offsets-39 -> Vector(1, 3, 2), __consumer_offsets-12 -> Vector(1, 2, 3), __consumer_offsets-45 -> Vector(1, 3, 2), __consumer_offsets-1 -> Vector(2, 3, 1), __consumer_offsets-5 -> Vector(3, 2, 1), __consumer_offsets-26 -> Vector(3, 1, 2), __consumer_offsets-29 -> Vector(3, 2, 1), __consumer_offsets-34 -> Vector(2, 1, 3), __consumer_offsets-10 -> Vector(2, 1, 3), __consumer_offsets-32 -> Vector(3, 1, 2), __consumer_offsets-40 -> Vector(2, 1, 3))] (kafka.controller.KafkaController)
[2019-09-24 15:17:12,190] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2019-09-24 15:21:53,195] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 15:21:53,195] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 15:21:53,199] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 3), __consumer_offsets-4 -> Vector(2, 1, 3), __consumer_offsets-7 -> Vector(2, 3, 1), __consumer_offsets-46 -> Vector(2, 1, 3), __consumer_offsets-25 -> Vector(2, 3, 1), __consumer_offsets-49 -> Vector(2, 3, 1), __consumer_offsets-16 -> Vector(2, 1, 3), __consumer_offsets-28 -> Vector(2, 1, 3), __consumer_offsets-31 -> Vector(2, 3, 1), __consumer_offsets-37 -> Vector(2, 3, 1), topic-0 -> Vector(2), __consumer_offsets-19 -> Vector(2, 3, 1), __consumer_offsets-13 -> Vector(2, 3, 1), __consumer_offsets-43 -> Vector(2, 3, 1), __consumer_offsets-1 -> Vector(2, 3, 1), __consumer_offsets-34 -> Vector(2, 1, 3), __consumer_offsets-10 -> Vector(2, 1, 3), __consumer_offsets-40 -> Vector(2, 1, 3)), 1 -> Map(__consumer_offsets-30 -> Vector(1, 2, 3), __consumer_offsets-21 -> Vector(1, 3, 2), __consumer_offsets-27 -> Vector(1, 3, 2), __consumer_offsets-9 -> Vector(1, 3, 2), __consumer_offsets-33 -> Vector(1, 3, 2), __consumer_offsets-36 -> Vector(1, 2, 3), __consumer_offsets-42 -> Vector(1, 2, 3), __consumer_offsets-3 -> Vector(1, 3, 2), __consumer_offsets-18 -> Vector(1, 2, 3), __consumer_offsets-15 -> Vector(1, 3, 2), __consumer_offsets-24 -> Vector(1, 2, 3), __consumer_offsets-48 -> Vector(1, 2, 3), __consumer_offsets-6 -> Vector(1, 2, 3), __consumer_offsets-0 -> Vector(1, 2, 3), __consumer_offsets-39 -> Vector(1, 3, 2), __consumer_offsets-12 -> Vector(1, 2, 3), __consumer_offsets-45 -> Vector(1, 3, 2)), 3 -> Map(__consumer_offsets-8 -> Vector(3, 1, 2), __consumer_offsets-35 -> Vector(3, 2, 1), __consumer_offsets-41 -> Vector(3, 2, 1), __consumer_offsets-23 -> Vector(3, 2, 1), __consumer_offsets-47 -> Vector(3, 2, 1), __consumer_offsets-38 -> Vector(3, 1, 2), __consumer_offsets-17 -> Vector(3, 2, 1), __consumer_offsets-11 -> Vector(3, 2, 1), __consumer_offsets-2 -> Vector(3, 1, 2), __consumer_offsets-14 -> Vector(3, 1, 2), __consumer_offsets-20 -> Vector(3, 1, 2), __consumer_offsets-44 -> Vector(3, 1, 2), __consumer_offsets-5 -> Vector(3, 2, 1), __consumer_offsets-26 -> Vector(3, 1, 2), __consumer_offsets-29 -> Vector(3, 2, 1), __consumer_offsets-32 -> Vector(3, 1, 2))) (kafka.controller.KafkaController)
[2019-09-24 15:21:53,199] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-24 15:21:53,200] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:21:53,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-24 15:21:53,200] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:21:53,200] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-24 15:21:53,200] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:26:53,200] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 15:26:53,200] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 3), __consumer_offsets-4 -> Vector(2, 1, 3), __consumer_offsets-7 -> Vector(2, 3, 1), __consumer_offsets-46 -> Vector(2, 1, 3), __consumer_offsets-25 -> Vector(2, 3, 1), __consumer_offsets-49 -> Vector(2, 3, 1), __consumer_offsets-16 -> Vector(2, 1, 3), __consumer_offsets-28 -> Vector(2, 1, 3), __consumer_offsets-31 -> Vector(2, 3, 1), __consumer_offsets-37 -> Vector(2, 3, 1), topic-0 -> Vector(2), __consumer_offsets-19 -> Vector(2, 3, 1), __consumer_offsets-13 -> Vector(2, 3, 1), __consumer_offsets-43 -> Vector(2, 3, 1), __consumer_offsets-1 -> Vector(2, 3, 1), __consumer_offsets-34 -> Vector(2, 1, 3), __consumer_offsets-10 -> Vector(2, 1, 3), __consumer_offsets-40 -> Vector(2, 1, 3)), 1 -> Map(__consumer_offsets-30 -> Vector(1, 2, 3), __consumer_offsets-21 -> Vector(1, 3, 2), __consumer_offsets-27 -> Vector(1, 3, 2), __consumer_offsets-9 -> Vector(1, 3, 2), __consumer_offsets-33 -> Vector(1, 3, 2), __consumer_offsets-36 -> Vector(1, 2, 3), __consumer_offsets-42 -> Vector(1, 2, 3), __consumer_offsets-3 -> Vector(1, 3, 2), __consumer_offsets-18 -> Vector(1, 2, 3), __consumer_offsets-15 -> Vector(1, 3, 2), __consumer_offsets-24 -> Vector(1, 2, 3), __consumer_offsets-48 -> Vector(1, 2, 3), __consumer_offsets-6 -> Vector(1, 2, 3), __consumer_offsets-0 -> Vector(1, 2, 3), __consumer_offsets-39 -> Vector(1, 3, 2), __consumer_offsets-12 -> Vector(1, 2, 3), __consumer_offsets-45 -> Vector(1, 3, 2)), 3 -> Map(__consumer_offsets-8 -> Vector(3, 1, 2), __consumer_offsets-35 -> Vector(3, 2, 1), __consumer_offsets-41 -> Vector(3, 2, 1), __consumer_offsets-23 -> Vector(3, 2, 1), __consumer_offsets-47 -> Vector(3, 2, 1), __consumer_offsets-38 -> Vector(3, 1, 2), __consumer_offsets-17 -> Vector(3, 2, 1), __consumer_offsets-11 -> Vector(3, 2, 1), __consumer_offsets-2 -> Vector(3, 1, 2), __consumer_offsets-14 -> Vector(3, 1, 2), __consumer_offsets-20 -> Vector(3, 1, 2), __consumer_offsets-44 -> Vector(3, 1, 2), __consumer_offsets-5 -> Vector(3, 2, 1), __consumer_offsets-26 -> Vector(3, 1, 2), __consumer_offsets-29 -> Vector(3, 2, 1), __consumer_offsets-32 -> Vector(3, 1, 2))) (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-24 15:26:53,204] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:31:53,204] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 15:31:53,205] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 3), __consumer_offsets-4 -> Vector(2, 1, 3), __consumer_offsets-7 -> Vector(2, 3, 1), __consumer_offsets-46 -> Vector(2, 1, 3), __consumer_offsets-25 -> Vector(2, 3, 1), __consumer_offsets-49 -> Vector(2, 3, 1), __consumer_offsets-16 -> Vector(2, 1, 3), __consumer_offsets-28 -> Vector(2, 1, 3), __consumer_offsets-31 -> Vector(2, 3, 1), __consumer_offsets-37 -> Vector(2, 3, 1), topic-0 -> Vector(2), __consumer_offsets-19 -> Vector(2, 3, 1), __consumer_offsets-13 -> Vector(2, 3, 1), __consumer_offsets-43 -> Vector(2, 3, 1), __consumer_offsets-1 -> Vector(2, 3, 1), __consumer_offsets-34 -> Vector(2, 1, 3), __consumer_offsets-10 -> Vector(2, 1, 3), __consumer_offsets-40 -> Vector(2, 1, 3)), 1 -> Map(__consumer_offsets-30 -> Vector(1, 2, 3), __consumer_offsets-21 -> Vector(1, 3, 2), __consumer_offsets-27 -> Vector(1, 3, 2), __consumer_offsets-9 -> Vector(1, 3, 2), __consumer_offsets-33 -> Vector(1, 3, 2), __consumer_offsets-36 -> Vector(1, 2, 3), __consumer_offsets-42 -> Vector(1, 2, 3), __consumer_offsets-3 -> Vector(1, 3, 2), __consumer_offsets-18 -> Vector(1, 2, 3), __consumer_offsets-15 -> Vector(1, 3, 2), __consumer_offsets-24 -> Vector(1, 2, 3), __consumer_offsets-48 -> Vector(1, 2, 3), __consumer_offsets-6 -> Vector(1, 2, 3), __consumer_offsets-0 -> Vector(1, 2, 3), __consumer_offsets-39 -> Vector(1, 3, 2), __consumer_offsets-12 -> Vector(1, 2, 3), __consumer_offsets-45 -> Vector(1, 3, 2)), 3 -> Map(__consumer_offsets-8 -> Vector(3, 1, 2), __consumer_offsets-35 -> Vector(3, 2, 1), __consumer_offsets-41 -> Vector(3, 2, 1), __consumer_offsets-23 -> Vector(3, 2, 1), __consumer_offsets-47 -> Vector(3, 2, 1), __consumer_offsets-38 -> Vector(3, 1, 2), __consumer_offsets-17 -> Vector(3, 2, 1), __consumer_offsets-11 -> Vector(3, 2, 1), __consumer_offsets-2 -> Vector(3, 1, 2), __consumer_offsets-14 -> Vector(3, 1, 2), __consumer_offsets-20 -> Vector(3, 1, 2), __consumer_offsets-44 -> Vector(3, 1, 2), __consumer_offsets-5 -> Vector(3, 2, 1), __consumer_offsets-26 -> Vector(3, 1, 2), __consumer_offsets-29 -> Vector(3, 2, 1), __consumer_offsets-32 -> Vector(3, 1, 2))) (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-24 15:31:53,208] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:36:53,209] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-24 15:36:53,209] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-22 -> Vector(2, 1, 3), __consumer_offsets-4 -> Vector(2, 1, 3), __consumer_offsets-7 -> Vector(2, 3, 1), __consumer_offsets-46 -> Vector(2, 1, 3), __consumer_offsets-25 -> Vector(2, 3, 1), __consumer_offsets-49 -> Vector(2, 3, 1), __consumer_offsets-16 -> Vector(2, 1, 3), __consumer_offsets-28 -> Vector(2, 1, 3), __consumer_offsets-31 -> Vector(2, 3, 1), __consumer_offsets-37 -> Vector(2, 3, 1), topic-0 -> Vector(2), __consumer_offsets-19 -> Vector(2, 3, 1), __consumer_offsets-13 -> Vector(2, 3, 1), __consumer_offsets-43 -> Vector(2, 3, 1), __consumer_offsets-1 -> Vector(2, 3, 1), __consumer_offsets-34 -> Vector(2, 1, 3), __consumer_offsets-10 -> Vector(2, 1, 3), __consumer_offsets-40 -> Vector(2, 1, 3)), 1 -> Map(__consumer_offsets-30 -> Vector(1, 2, 3), __consumer_offsets-21 -> Vector(1, 3, 2), __consumer_offsets-27 -> Vector(1, 3, 2), __consumer_offsets-9 -> Vector(1, 3, 2), __consumer_offsets-33 -> Vector(1, 3, 2), __consumer_offsets-36 -> Vector(1, 2, 3), __consumer_offsets-42 -> Vector(1, 2, 3), __consumer_offsets-3 -> Vector(1, 3, 2), __consumer_offsets-18 -> Vector(1, 2, 3), __consumer_offsets-15 -> Vector(1, 3, 2), __consumer_offsets-24 -> Vector(1, 2, 3), __consumer_offsets-48 -> Vector(1, 2, 3), __consumer_offsets-6 -> Vector(1, 2, 3), __consumer_offsets-0 -> Vector(1, 2, 3), __consumer_offsets-39 -> Vector(1, 3, 2), __consumer_offsets-12 -> Vector(1, 2, 3), __consumer_offsets-45 -> Vector(1, 3, 2)), 3 -> Map(__consumer_offsets-8 -> Vector(3, 1, 2), __consumer_offsets-35 -> Vector(3, 2, 1), __consumer_offsets-41 -> Vector(3, 2, 1), __consumer_offsets-23 -> Vector(3, 2, 1), __consumer_offsets-47 -> Vector(3, 2, 1), __consumer_offsets-38 -> Vector(3, 1, 2), __consumer_offsets-17 -> Vector(3, 2, 1), __consumer_offsets-11 -> Vector(3, 2, 1), __consumer_offsets-2 -> Vector(3, 1, 2), __consumer_offsets-14 -> Vector(3, 1, 2), __consumer_offsets-20 -> Vector(3, 1, 2), __consumer_offsets-44 -> Vector(3, 1, 2), __consumer_offsets-5 -> Vector(3, 2, 1), __consumer_offsets-26 -> Vector(3, 1, 2), __consumer_offsets-29 -> Vector(3, 2, 1), __consumer_offsets-32 -> Vector(3, 1, 2))) (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-24 15:36:53,211] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-24 15:37:17,361] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-09-24 15:40:10,454] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-09-24 15:41:21,980] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2019-09-24 15:41:21,980] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2019-09-24 15:41:21,981] DEBUG [Controller id=1] Live brokers: 2,3 (kafka.controller.KafkaController)
[2019-09-24 15:41:22,129] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 15:41:22,129] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 15:41:22,129] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-24 15:41:22,135] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=22,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=8,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=4,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=7,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=46,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=25,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=35,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=41,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=23,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=49,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=47,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=16,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=28,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=31,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=37,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=38,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=17,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=19,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=11,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=13,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=43,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=14,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=20,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=44,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=5,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=26,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=29,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=34,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=10,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=32,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=40,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-09-24 15:41:22,540] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=40,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=23,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=20,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=14,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=8,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=22,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=10,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=7,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=29,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=26,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=44,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=46,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=31,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=49,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=4,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=38,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=2,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=34,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=11,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=13,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=17,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=1,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=25,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=43,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=19,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=35,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=28,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=37,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=5,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=47,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=16,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=32,Replica=1],false),StopReplicaRequestInfo([Topic=__consumer_offsets,Partition=41,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2019-09-24 15:41:22,542] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),topic-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:1) (kafka.controller.KafkaController)
[2019-09-24 15:41:23,811] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 15:41:23,812] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 15:41:23,812] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-24 15:41:23,812] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2019-09-24 15:41:23,813] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(2, 1, 3) (kafka.controller.KafkaController)
[2019-09-24 15:41:23,814] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2019-09-24 15:41:23,815] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2019-09-24 15:41:23,816] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,816] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,816] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,817] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,817] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,817] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,818] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,818] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,818] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2019-09-24 15:41:23,820] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
