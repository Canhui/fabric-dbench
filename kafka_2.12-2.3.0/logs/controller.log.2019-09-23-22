[2019-09-23 22:24:10,505] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-09-23 22:33:35,555] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-09-23 22:33:35,590] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2019-09-23 22:33:35,590] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2019-09-23 22:33:35,594] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-09-23 22:33:35,597] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-09-23 22:33:35,599] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2019-09-23 22:33:35,634] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 4294967320) (kafka.controller.KafkaController)
[2019-09-23 22:33:35,639] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2019-09-23 22:33:35,646] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2019-09-23 22:33:35,655] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-23 22:33:35,657] INFO [Controller id=1] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-09-23 22:33:35,658] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2019-09-23 22:33:35,658] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-09-23 22:33:35,659] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2019-09-23 22:33:35,659] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-09-23 22:33:35,663] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,664] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,664] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-09-23 22:33:35,665] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2019-09-23 22:33:35,665] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2019-09-23 22:33:35,679] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2019-09-23 22:33:35,680] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-09-23 22:33:35,685] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2019-09-23 22:33:35,686] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2019-09-23 22:33:35,686] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker1:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-23 22:33:35,686] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2019-09-23 22:33:35,687] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2019-09-23 22:33:35,691] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2019-09-23 22:33:35,691] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2019-09-23 22:33:35,694] INFO [Controller id=1] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2019-09-23 22:33:35,694] INFO [Controller id=1] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2019-09-23 22:33:35,698] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,698] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,698] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,698] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,699] INFO [Controller id=1] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-09-23 22:33:35,719] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-09-23 22:33:40,721] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-23 22:33:40,721] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-23 22:33:40,724] DEBUG [Controller id=1] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2019-09-23 22:33:50,393] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2019-09-23 22:33:50,394] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2019-09-23 22:33:50,401] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-23 22:33:50,404] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2019-09-23 22:33:50,406] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-23 22:33:50,409] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2019-09-23 22:33:50,411] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339) (kafka.controller.KafkaController)
[2019-09-23 22:34:05,717] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2019-09-23 22:34:05,717] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2019-09-23 22:34:05,724] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2019-09-23 22:34:05,724] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2019-09-23 22:34:05,726] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2019-09-23 22:34:05,727] INFO [RequestSendThread controllerId=1] Controller 1 connected to broker3:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-09-23 22:34:05,728] INFO [Controller id=1] Updated broker epochs cache: Map(1 -> 4294967320, 2 -> 4294967339, 3 -> 4294967355) (kafka.controller.KafkaController)
[2019-09-23 22:35:17,408] INFO [Controller id=1] New topics: [Set(topic)], deleted topics: [Set()], new partition replica assignment [Map(topic-0 -> Vector(2))] (kafka.controller.KafkaController)
[2019-09-23 22:35:17,409] INFO [Controller id=1] New partition creation callback for topic-0 (kafka.controller.KafkaController)
[2019-09-23 22:38:23,527] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> Vector(1), __consumer_offsets-30 -> Vector(3), __consumer_offsets-8 -> Vector(2), __consumer_offsets-21 -> Vector(3), __consumer_offsets-4 -> Vector(1), __consumer_offsets-27 -> Vector(3), __consumer_offsets-7 -> Vector(1), __consumer_offsets-9 -> Vector(3), __consumer_offsets-46 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(2), __consumer_offsets-41 -> Vector(2), __consumer_offsets-33 -> Vector(3), __consumer_offsets-23 -> Vector(2), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(2), __consumer_offsets-16 -> Vector(1), __consumer_offsets-28 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-36 -> Vector(3), __consumer_offsets-42 -> Vector(3), __consumer_offsets-3 -> Vector(3), __consumer_offsets-18 -> Vector(3), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(3), __consumer_offsets-24 -> Vector(3), __consumer_offsets-38 -> Vector(2), __consumer_offsets-17 -> Vector(2), __consumer_offsets-48 -> Vector(3), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(2), __consumer_offsets-13 -> Vector(1), __consumer_offsets-2 -> Vector(2), __consumer_offsets-43 -> Vector(1), __consumer_offsets-6 -> Vector(3), __consumer_offsets-14 -> Vector(2), __consumer_offsets-20 -> Vector(2), __consumer_offsets-0 -> Vector(3), __consumer_offsets-44 -> Vector(2), __consumer_offsets-39 -> Vector(3), __consumer_offsets-12 -> Vector(3), __consumer_offsets-45 -> Vector(3), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(2), __consumer_offsets-26 -> Vector(2), __consumer_offsets-29 -> Vector(2), __consumer_offsets-34 -> Vector(1), __consumer_offsets-10 -> Vector(1), __consumer_offsets-32 -> Vector(2), __consumer_offsets-40 -> Vector(1))] (kafka.controller.KafkaController)
[2019-09-23 22:38:23,528] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2019-09-23 22:38:40,725] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-23 22:38:40,725] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-23 22:38:40,731] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-8 -> Vector(2), __consumer_offsets-35 -> Vector(2), __consumer_offsets-41 -> Vector(2), __consumer_offsets-23 -> Vector(2), __consumer_offsets-47 -> Vector(2), topic-0 -> Vector(2), __consumer_offsets-38 -> Vector(2), __consumer_offsets-17 -> Vector(2), __consumer_offsets-11 -> Vector(2), __consumer_offsets-2 -> Vector(2), __consumer_offsets-14 -> Vector(2), __consumer_offsets-20 -> Vector(2), __consumer_offsets-44 -> Vector(2), __consumer_offsets-5 -> Vector(2), __consumer_offsets-26 -> Vector(2), __consumer_offsets-29 -> Vector(2), __consumer_offsets-32 -> Vector(2)), 1 -> Map(__consumer_offsets-22 -> Vector(1), __consumer_offsets-4 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-46 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-16 -> Vector(1), __consumer_offsets-28 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-34 -> Vector(1), __consumer_offsets-10 -> Vector(1), __consumer_offsets-40 -> Vector(1)), 3 -> Map(__consumer_offsets-30 -> Vector(3), __consumer_offsets-21 -> Vector(3), __consumer_offsets-27 -> Vector(3), __consumer_offsets-9 -> Vector(3), __consumer_offsets-33 -> Vector(3), __consumer_offsets-36 -> Vector(3), __consumer_offsets-42 -> Vector(3), __consumer_offsets-3 -> Vector(3), __consumer_offsets-18 -> Vector(3), __consumer_offsets-15 -> Vector(3), __consumer_offsets-24 -> Vector(3), __consumer_offsets-48 -> Vector(3), __consumer_offsets-6 -> Vector(3), __consumer_offsets-0 -> Vector(3), __consumer_offsets-39 -> Vector(3), __consumer_offsets-12 -> Vector(3), __consumer_offsets-45 -> Vector(3))) (kafka.controller.KafkaController)
[2019-09-23 22:38:40,733] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-23 22:38:40,734] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:38:40,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-23 22:38:40,735] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:38:40,735] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-23 22:38:40,735] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:43:40,735] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-23 22:43:40,735] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-8 -> Vector(2), __consumer_offsets-35 -> Vector(2), __consumer_offsets-41 -> Vector(2), __consumer_offsets-23 -> Vector(2), __consumer_offsets-47 -> Vector(2), topic-0 -> Vector(2), __consumer_offsets-38 -> Vector(2), __consumer_offsets-17 -> Vector(2), __consumer_offsets-11 -> Vector(2), __consumer_offsets-2 -> Vector(2), __consumer_offsets-14 -> Vector(2), __consumer_offsets-20 -> Vector(2), __consumer_offsets-44 -> Vector(2), __consumer_offsets-5 -> Vector(2), __consumer_offsets-26 -> Vector(2), __consumer_offsets-29 -> Vector(2), __consumer_offsets-32 -> Vector(2)), 1 -> Map(__consumer_offsets-22 -> Vector(1), __consumer_offsets-4 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-46 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-16 -> Vector(1), __consumer_offsets-28 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-34 -> Vector(1), __consumer_offsets-10 -> Vector(1), __consumer_offsets-40 -> Vector(1)), 3 -> Map(__consumer_offsets-30 -> Vector(3), __consumer_offsets-21 -> Vector(3), __consumer_offsets-27 -> Vector(3), __consumer_offsets-9 -> Vector(3), __consumer_offsets-33 -> Vector(3), __consumer_offsets-36 -> Vector(3), __consumer_offsets-42 -> Vector(3), __consumer_offsets-3 -> Vector(3), __consumer_offsets-18 -> Vector(3), __consumer_offsets-15 -> Vector(3), __consumer_offsets-24 -> Vector(3), __consumer_offsets-48 -> Vector(3), __consumer_offsets-6 -> Vector(3), __consumer_offsets-0 -> Vector(3), __consumer_offsets-39 -> Vector(3), __consumer_offsets-12 -> Vector(3), __consumer_offsets-45 -> Vector(3))) (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-23 22:43:40,739] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:48:40,740] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-23 22:48:40,740] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-8 -> Vector(2), __consumer_offsets-35 -> Vector(2), __consumer_offsets-41 -> Vector(2), __consumer_offsets-23 -> Vector(2), __consumer_offsets-47 -> Vector(2), topic-0 -> Vector(2), __consumer_offsets-38 -> Vector(2), __consumer_offsets-17 -> Vector(2), __consumer_offsets-11 -> Vector(2), __consumer_offsets-2 -> Vector(2), __consumer_offsets-14 -> Vector(2), __consumer_offsets-20 -> Vector(2), __consumer_offsets-44 -> Vector(2), __consumer_offsets-5 -> Vector(2), __consumer_offsets-26 -> Vector(2), __consumer_offsets-29 -> Vector(2), __consumer_offsets-32 -> Vector(2)), 1 -> Map(__consumer_offsets-22 -> Vector(1), __consumer_offsets-4 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-46 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-16 -> Vector(1), __consumer_offsets-28 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-34 -> Vector(1), __consumer_offsets-10 -> Vector(1), __consumer_offsets-40 -> Vector(1)), 3 -> Map(__consumer_offsets-30 -> Vector(3), __consumer_offsets-21 -> Vector(3), __consumer_offsets-27 -> Vector(3), __consumer_offsets-9 -> Vector(3), __consumer_offsets-33 -> Vector(3), __consumer_offsets-36 -> Vector(3), __consumer_offsets-42 -> Vector(3), __consumer_offsets-3 -> Vector(3), __consumer_offsets-18 -> Vector(3), __consumer_offsets-15 -> Vector(3), __consumer_offsets-24 -> Vector(3), __consumer_offsets-48 -> Vector(3), __consumer_offsets-6 -> Vector(3), __consumer_offsets-0 -> Vector(3), __consumer_offsets-39 -> Vector(3), __consumer_offsets-12 -> Vector(3), __consumer_offsets-45 -> Vector(3))) (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-23 22:48:40,743] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:53:40,744] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-23 22:53:40,744] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-23 22:53:40,746] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-8 -> Vector(2), __consumer_offsets-35 -> Vector(2), __consumer_offsets-41 -> Vector(2), __consumer_offsets-23 -> Vector(2), __consumer_offsets-47 -> Vector(2), topic-0 -> Vector(2), __consumer_offsets-38 -> Vector(2), __consumer_offsets-17 -> Vector(2), __consumer_offsets-11 -> Vector(2), __consumer_offsets-2 -> Vector(2), __consumer_offsets-14 -> Vector(2), __consumer_offsets-20 -> Vector(2), __consumer_offsets-44 -> Vector(2), __consumer_offsets-5 -> Vector(2), __consumer_offsets-26 -> Vector(2), __consumer_offsets-29 -> Vector(2), __consumer_offsets-32 -> Vector(2)), 1 -> Map(__consumer_offsets-22 -> Vector(1), __consumer_offsets-4 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-46 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-16 -> Vector(1), __consumer_offsets-28 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-34 -> Vector(1), __consumer_offsets-10 -> Vector(1), __consumer_offsets-40 -> Vector(1)), 3 -> Map(__consumer_offsets-30 -> Vector(3), __consumer_offsets-21 -> Vector(3), __consumer_offsets-27 -> Vector(3), __consumer_offsets-9 -> Vector(3), __consumer_offsets-33 -> Vector(3), __consumer_offsets-36 -> Vector(3), __consumer_offsets-42 -> Vector(3), __consumer_offsets-3 -> Vector(3), __consumer_offsets-18 -> Vector(3), __consumer_offsets-15 -> Vector(3), __consumer_offsets-24 -> Vector(3), __consumer_offsets-48 -> Vector(3), __consumer_offsets-6 -> Vector(3), __consumer_offsets-0 -> Vector(3), __consumer_offsets-39 -> Vector(3), __consumer_offsets-12 -> Vector(3), __consumer_offsets-45 -> Vector(3))) (kafka.controller.KafkaController)
[2019-09-23 22:53:40,747] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-23 22:53:40,747] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:53:40,747] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-23 22:53:40,747] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:53:40,747] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-23 22:53:40,747] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:58:40,747] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2019-09-23 22:58:40,747] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] DEBUG [Controller id=1] Preferred replicas by broker Map(2 -> Map(__consumer_offsets-8 -> Vector(2), __consumer_offsets-35 -> Vector(2), __consumer_offsets-41 -> Vector(2), __consumer_offsets-23 -> Vector(2), __consumer_offsets-47 -> Vector(2), topic-0 -> Vector(2), __consumer_offsets-38 -> Vector(2), __consumer_offsets-17 -> Vector(2), __consumer_offsets-11 -> Vector(2), __consumer_offsets-2 -> Vector(2), __consumer_offsets-14 -> Vector(2), __consumer_offsets-20 -> Vector(2), __consumer_offsets-44 -> Vector(2), __consumer_offsets-5 -> Vector(2), __consumer_offsets-26 -> Vector(2), __consumer_offsets-29 -> Vector(2), __consumer_offsets-32 -> Vector(2)), 1 -> Map(__consumer_offsets-22 -> Vector(1), __consumer_offsets-4 -> Vector(1), __consumer_offsets-7 -> Vector(1), __consumer_offsets-46 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-16 -> Vector(1), __consumer_offsets-28 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-34 -> Vector(1), __consumer_offsets-10 -> Vector(1), __consumer_offsets-40 -> Vector(1)), 3 -> Map(__consumer_offsets-30 -> Vector(3), __consumer_offsets-21 -> Vector(3), __consumer_offsets-27 -> Vector(3), __consumer_offsets-9 -> Vector(3), __consumer_offsets-33 -> Vector(3), __consumer_offsets-36 -> Vector(3), __consumer_offsets-42 -> Vector(3), __consumer_offsets-3 -> Vector(3), __consumer_offsets-18 -> Vector(3), __consumer_offsets-15 -> Vector(3), __consumer_offsets-24 -> Vector(3), __consumer_offsets-48 -> Vector(3), __consumer_offsets-6 -> Vector(3), __consumer_offsets-0 -> Vector(3), __consumer_offsets-39 -> Vector(3), __consumer_offsets-12 -> Vector(3), __consumer_offsets-45 -> Vector(3))) (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2019-09-23 22:58:40,750] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
