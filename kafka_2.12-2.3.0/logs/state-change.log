[2019-10-02 16:12:42,150] TRACE [Controller id=1 epoch=1] Changed partition mychannel-0 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2019-10-02 16:12:42,151] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition mychannel-0 from NonExistentReplica to NewReplica (state.change.logger)
[2019-10-02 16:12:42,210] TRACE [Controller id=1 epoch=1] Changed partition mychannel-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), zkVersion=0) (state.change.logger)
[2019-10-02 16:12:42,210] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=3, zkVersion=0, replicas=3, isNew=true) to broker 3 for partition mychannel-0 (state.change.logger)
[2019-10-02 16:12:42,210] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3], zkVersion=0, replicas=[3], offlineReplicas=[]) to brokers Set(1, 2, 3) for partition mychannel-0 (state.change.logger)
[2019-10-02 16:12:42,211] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition mychannel-0 from NewReplica to OnlineReplica (state.change.logger)
[2019-10-02 16:12:42,214] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3], zkVersion=0, replicas=[3], offlineReplicas=[]) for partition mychannel-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2019-10-02 16:12:42,214] TRACE [Controller id=1 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 6 sent to broker broker1:9092 (id: 1 rack: null) (state.change.logger)
[2019-10-02 16:12:42,215] TRACE [Controller id=1 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 4 sent to broker broker2:9092 (id: 2 rack: null) (state.change.logger)
[2019-10-02 16:12:42,251] TRACE [Controller id=1 epoch=1] Received response {error_code=0,partitions=[{topic=mychannel,partition=0,error_code=0}]} for request LEADER_AND_ISR with correlation id 4 sent to broker broker3:9092 (id: 3 rack: null) (state.change.logger)
[2019-10-02 16:12:42,254] TRACE [Controller id=1 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 5 sent to broker broker3:9092 (id: 3 rack: null) (state.change.logger)
[2019-10-02 16:32:21,139] TRACE [Controller id=1 epoch=1] Changed partition mychannel-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-10-02 16:32:21,139] TRACE [Controller id=1 epoch=1] Changed partition testchainid-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2019-10-02 16:32:21,161] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition mychannel-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition mychannel-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-10-02 16:32:21,164] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition testchainid-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition testchainid-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-10-02 16:32:21,188] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition mychannel-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-10-02 16:32:21,188] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition testchainid-0 from OnlineReplica to OfflineReplica (state.change.logger)
[2019-10-02 16:32:21,189] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition mychannel-0 (state.change.logger)
[2019-10-02 16:32:21,189] TRACE [Controller id=1 epoch=1] Sending UpdateMetadata request PartitionState(controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) to brokers Set(1, 2) for partition testchainid-0 (state.change.logger)
[2019-10-02 16:32:21,193] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition testchainid-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2019-10-02 16:32:21,193] TRACE [Broker id=1] Cached leader info PartitionState(controllerEpoch=1, leader=-1, leaderEpoch=1, isr=[3], zkVersion=1, replicas=[3], offlineReplicas=[3]) for partition mychannel-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2019-10-02 16:32:21,194] TRACE [Controller id=1 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 7 sent to broker broker1:9092 (id: 1 rack: null) (state.change.logger)
[2019-10-02 16:32:21,194] TRACE [Controller id=1 epoch=1] Received response {error_code=0} for request UPDATE_METADATA with correlation id 5 sent to broker broker2:9092 (id: 2 rack: null) (state.change.logger)
[2019-10-02 16:32:24,353] TRACE [Controller id=1 epoch=1] Changed partition mychannel-0 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-10-02 16:32:24,353] TRACE [Controller id=1 epoch=1] Changed partition testchainid-0 state from OfflinePartition to OfflinePartition (state.change.logger)
[2019-10-02 16:32:24,358] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition mychannel-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition mychannel-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
[2019-10-02 16:32:24,358] ERROR [Controller id=1 epoch=1] Controller 1 epoch 1 failed to change state for partition testchainid-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition testchainid-0 under strategy OfflinePartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$9(PartitionStateMachine.scala:381)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:378)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:305)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:215)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:461)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:429)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1280)
	at kafka.controller.KafkaController.process(KafkaController.scala:1578)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:89)
